name: upx
on:
  workflow_dispatch:
    inputs:
      force:
        description: 'overwrite any existing tags'
        type: string
        required: false
        default: 'false'
  schedule:
    - cron: "0 5 * * *"
  push:
    tags:
      - 'upx'
jobs:
  upx:
    runs-on: ubuntu-latest
    steps:
      # ╔═════════════════════════════════════════════════════╗
      # ║                    SETUP UPDATE                     ║
      # ╚═════════════════════════════════════════════════════╝
      # GET LATEST VERSION
      - name: init / get latest version of app
        run: |
          LATEST_VERSION=$(curl -s https://api.github.com/repos/upx/upx/releases/latest | jq -r '.tag_name' | sed 's/v//')
          if [ "${LATEST_VERSION}" != "null" ]; then
            echo "APP_VERSION=${LATEST_VERSION}" >> "${GITHUB_ENV}"
          else
            echo "APP_VERSION=null" >> "${GITHUB_ENV}"
          fi

      # COMPARE LATEST VERSION WITH CURRENT OR FORCE UPDATE
      - name: init / compare latest to current or force
        if: env.APP_VERSION != 'null'
        run: |
          if [ "${{ github.event.inputs.force }}" == "true" ]; then
            echo "WORKFLOW_AUTO_UPDATE=true" >> "${GITHUB_ENV}"
            echo "[success] image will be forcefully updated!"
          else
            if curl -kILs --fail https://hub.docker.com/v2/repositories/11notes/distroless/tags/upx-${LATEST_VERSION}; then
              echo "[fail] tag ${{ env.APP_VERSION }} exist already."
            else
              echo "WORKFLOW_AUTO_UPDATE=true" >> "${GITHUB_ENV}"
              echo "[success] new version ${{ env.APP_VERSION }} found, updating."
            fi
          fi

      # CREATE BASE64 STRING FOR ETC
      - name: init / base64 nested json
        if: env.WORKFLOW_AUTO_UPDATE == 'true'
        uses: actions/github-script@62c3794a3eb6788d9a2a72b219504732c0c9a298
        with:
          script: |
            const { Buffer } = require('node:buffer');
            const etc = {
              dockerfile:"upx.dockerfile",
              tag:"upx",
              version:"${{ env.APP_VERSION }}",
              semver:{disable:{rolling: true}}
            };
            core.exportVariable('WORKFLOW_BASE64JSON', Buffer.from(JSON.stringify(etc)).toString('base64'));

      # START DOCKER BUILD WORKFLOW
      - name: execute / docker build
        if: env.WORKFLOW_AUTO_UPDATE == 'true'
        uses: the-actions-org/workflow-dispatch@3133c5d135c7dbe4be4f9793872b6ef331b53bc7
        with:
          wait-for-completion: false
          workflow: docker.yml
          token: "${{ secrets.REPOSITORY_TOKEN }}"
          inputs: '{ "release":"false", "readme":"false", "run-name":"upx", "etc":"${{ env.WORKFLOW_BASE64JSON }}" }'