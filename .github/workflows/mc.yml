name: mc
on:
  workflow_dispatch:
  schedule:
    - cron: "0 5 * * *"
  push:
    tags:
      - 'mc'
jobs:
  mc:
    runs-on: ubuntu-latest
    steps:
      - name: cron-update / get latest version
        run: |
          echo "LATEST_VERSION=$(curl -s https://api.github.com/repos/minio/mc/releases/latest | jq -r '.tag_name' | sed 's|RELEASE.||')" >> "${GITHUB_ENV}"
          if [ "${LATEST_VERSION}" != "null" ]; then
            if curl -kILs --fail https://hub.docker.com/v2/repositories/11notes/distroless/tags/mc-${LATEST_VERSION}; then
              echo "tag ${LATEST_VERSION} exists already!"
            else
              echo "WORKFLOW_AUTO_UPDATE=true" >> "${GITHUB_ENV}"
              echo "LATEST_VERSION=${LATEST_VERSION}" >> "${GITHUB_ENV}"
            fi
          else
            echo "tag ${LATEST_VERSION} is null!"
          fi

      - name: init / base64 nested json
        if: env.WORKFLOW_AUTO_UPDATE == 'true'
        uses: actions/github-script@62c3794a3eb6788d9a2a72b219504732c0c9a298
        with:
          script: |
            const { Buffer } = require('node:buffer');
            const { inspect } = require('node:util');

            const LATEST_VERSION = {
              original:'${{ env.LATEST_VERSION }}'
            };
            LATEST_VERSION.semver = LATEST_VERSION.original.replace(/-/ig, ".").split("T")[0];
            const etc = {
              dockerfile:"mc.dockerfile",
              tag:"mc",
              version:LATEST_VERSION.semver,
              build:{
                args:{
                  version_build:LATEST_VERSION.original.split("T")[1],
                }
              },
              semver:{disable:{rolling: true}}
            };
            core.exportVariable('WORKFLOW_BASE64JSON', Buffer.from(JSON.stringify(etc)).toString('base64'));

            // print
              core.info(inspect({etc:etc, LATEST_VERSION:LATEST_VERSION}, {showHidden:false, depth:null, colors:true}));

      - name: build docker image
        if: env.WORKFLOW_AUTO_UPDATE == 'true'
        uses: the-actions-org/workflow-dispatch@3133c5d135c7dbe4be4f9793872b6ef331b53bc7
        with:
          wait-for-completion: false
          workflow: docker.yml
          token: "${{ secrets.REPOSITORY_TOKEN }}"
          inputs: '{ "release":"false", "readme":"false", "run-name":"mc", "etc":"${{ env.WORKFLOW_BASE64JSON }}" }'